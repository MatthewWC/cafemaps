{"version":3,"sources":["apolloClient.js","tools/validator.js","tools/FormBuilder.js","components/Login.js","components/Register.js","components/Profile/Profile.js","components/Profile/EditProfile.js","components/MapView/Map.js","components/MapView/SideBar/StoreInfo/StoreInfo.js","components/MapView/SideBar/SideBar.js","components/MapView/CoffeeBar/CoffeeInfo/CoffeeInfo.js","components/MapView/CoffeeBar/CoffeeBar.js","components/MapView/ReportButton.js","components/MapView/MapView.js","components/Admin/Admin.js","components/Admin/Stores.js","components/Admin/Coffees.js","components/Admin/Store.js","components/Title/CoffeeMapsLogo.js","components/Title/Title.js","components/UserPanel/UserPanel.js","components/Admin/Coffee.js","components/App.js","index.js"],"names":["cache","InMemoryCache","httpLink","HttpLink","uri","authLink","setContext","_","headers","token","localStorage","getItem","authorization","client","ApolloClient","link","concat","validate","form","formFields","name","Object","keys","forEach","item","type","validator","isEmpty","value","Error","isEmail","isAlphanumeric","useStyles","makeStyles","theme","builderRoot","maxWidth","marginTop","paper","padding","display","flexDirection","textAlign","textField","margin","width","fileInput","imageContainer","justifyContent","errors","spacing","FormBuilder","formName","fields","imageUpload","mutation","props","defaultFields","classes","formRef","React","useRef","imageEle","imageFile","errorText","Grid","container","justify","className","Paper","Typography","image","alt","src","imageUrl","ref","height","accept","onChange","event","target","files","URL","createObjectURL","current","handleChange","formRoot","map","field","TextField","key","label","variant","defaultValue","InputLabelProps","shrink","inputProps","step","FormHelperText","error","Button","onClick","a","async","variables","innerHTML","parseFloat","data","FormData","config","append","axios","post","mutate","results","setItem","login","user","email","role","history","push","window","setTimeout","console","log","errMsg","toString","lastIndexOf","substring","handleSubmit","Login","password","LOGIN","gql","Register","confirmPassword","REGISTER","root","marginLeft","marginRight","profile","imageOuterContainer","float","button","Profile","useQuery","GET_USER","loading","getUser","firstName","lastName","href","EditProfile","UPDATE_USER","position","right","left","top","bottom","overflow","Map","onStoreMarkerClicked","mapRef","createRef","useEffect","L","center","zoom","zoomControl","layers","tileLayer","detectRetina","maxZoom","then","query","GET_STORES","getStores","store","marker","latitude","longitude","addTo","bindTooltip","storeName","permanent","on","flyTo","id","storeInfoRoot","maxHeight","title","textDecoration","StoreInfo","storeInfo","Avatar","Card","raised","TableContainer","Table","TableHead","TableBody","TableRow","TableCell","addressOne","phoneNumber","sideBar","zIndex","SideBar","coffeeInfoRoot","coffeeRoot","CoffeeInfo","coffeeInfo","getCoffees","coffee","coffeeName","description","coffeeBar","overflowY","CoffeeBar","buttonRoot","ReportButton","mapViewRoot","MapView","useState","setStoreInfo","setCoffeeInfo","visibility","setVisibility","GET_COFFEES","storeId","coffees","adminRoot","Admin","Link","storesRoot","Stores","CREATE_STORE","preventDefault","handleClick","coffeesRoot","Coffees","CREATE_COFFEE","storeRoot","Store","index","location","pathname","slice","GET_STORE","UPDATE_STORE","getStore","DELETE_STORE","CoffeeMapsLogo","SvgIcon","d","headerRoot","logo","Title","viewBox","panelRoot","UserPanel","anchorEl","setAnchorEl","handleClose","IconButton","currentTarget","fontSize","Menu","keepMounted","open","Boolean","onClose","MenuItem","removeItem","component","to","menu","Coffee","coffeeId","GET_COFFEE","UPDATE_COFFEE","getCoffee","DELETE_COFFEE","ProtectedAdminRoute","children","render","App","exact","path","defaults","common","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bf989d33.chunk.js","sourcesContent":["import { ApolloClient } from 'apollo-client'\r\nimport { HttpLink } from 'apollo-link-http'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { setContext } from 'apollo-link-context'\r\n\r\nconst cache = new InMemoryCache()\r\n\r\nconst httpLink = new HttpLink({\r\n  uri: 'https://104.248.235.48:8080/'\r\n})\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = localStorage.getItem('token')\r\n\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    }\r\n  }\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link: authLink.concat(httpLink)\r\n})\r\n\r\nexport default client","import validator from 'validator'\r\n\r\nconst validate = (form) => {\r\n  let formFields = form\r\n\r\n  switch(formFields.name){\r\n    case 'Update Profile Form':\r\n      // check for random character if field isnt empty\r\n      Object.keys(formFields).forEach(function (item){\r\n        // check for empty fields\r\n        if(formFields[item].type === 'text'){\r\n          if(validator.isEmpty(formFields[item].value)){\r\n            throw new Error('Fields cannot be empty.')\r\n          }\r\n        }\r\n        // email check\r\n        if(formFields[item].name === 'email'){\r\n          if(validator.isEmail(formFields[item].value) === false){\r\n            throw new Error('Thats not a real email.')\r\n          }\r\n        }\r\n\r\n        if(formFields[item].type === 'text' && formFields[item].value !== ''){\r\n          if(validator.isAlphanumeric(formFields[item].value) === false && formFields[item].name !== 'email'){\r\n            throw new Error('Fields can only contain letters A-Z & numbers 0-9.')\r\n          }\r\n        }\r\n      })\r\n      break\r\n    case 'Login Form':\r\n      Object.keys(formFields).forEach(function (item){\r\n        // check for empty fields\r\n        if(formFields[item].type === 'text'){\r\n          if(validator.isEmpty(formFields[item].value)){\r\n            throw new Error('Fields cannot be empty.')\r\n          }\r\n        }\r\n        // email check\r\n        if(formFields[item].name === 'email'){\r\n          if(validator.isEmail(formFields[item].value) === false){\r\n            throw new Error('Thats not a real email.')\r\n          }\r\n        }\r\n      })\r\n      // check if email is valid\r\n      break\r\n    case 'Register Form':\r\n      Object.keys(formFields).forEach(function (item){\r\n        // check for empty fields\r\n        if(formFields[item].type === 'text'){\r\n          if(validator.isEmpty(formFields[item].value)){\r\n            throw new Error('Fields cannot be empty.')\r\n          }\r\n        }\r\n        // email check\r\n        if(formFields[item].name === 'email'){\r\n          if(validator.isEmail(formFields[item].value) === false){\r\n            throw new Error('Thats not a real email.')\r\n          }\r\n        }\r\n      })\r\n      if(formFields['confirmPassword'].value !== formFields['password'].value){\r\n        throw new Error('Passwords do not match.')\r\n      }\r\n      break\r\n    case 'Create Store Form':\r\n      // check for empty fields\r\n      Object.keys(formFields).forEach(function (item){\r\n        if(formFields[item].type === 'text'){\r\n          if(validator.isEmpty(formFields[item].value)){\r\n            throw new Error('Fields cannot be empty')\r\n          }\r\n        }\r\n      })\r\n      break\r\n    case 'Create Coffee Form':\r\n        // check for empty fields\r\n        Object.keys(formFields).forEach(function (item){\r\n          if(formFields[item].type === 'text'){\r\n            if(validator.isEmpty(formFields[item].value)){\r\n              throw new Error('Fields cannot be empty')\r\n            }\r\n          }\r\n        })\r\n      break\r\n    case 'Update Store Form':\r\n      Object.keys(formFields).forEach(function (item){\r\n        // check for empty fields\r\n        if(formFields[item].type === 'text'){\r\n          if(validator.isEmpty(formFields[item].value)){\r\n            throw new Error('Fields cannot be empty')\r\n          }\r\n        }\r\n        // email check\r\n        if(formFields[item].name === 'email'){\r\n          if(validator.isEmail(formFields[item].value) === false){\r\n            throw new Error('Thats not a real email.')\r\n          }\r\n        }\r\n      })\r\n      break\r\n      case 'Update Coffee Form':\r\n        // check for empty fields\r\n        Object.keys(formFields).forEach(function (item){\r\n          if(formFields[item].type === 'text'){\r\n            if(validator.isEmpty(formFields[item].value)){\r\n              throw new Error('Fields cannot be empty')\r\n            }\r\n          }\r\n        })\r\n      break\r\n    default:\r\n      // if user somehow changed form name\r\n      throw new Error('Something bad happened. Contact support.') \r\n  }\r\n}\r\n\r\nexport default validate","import React from 'react'\r\nimport axios from 'axios'\r\n\r\n// ---- M-UI imports ----\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\n// ---- M-UI imports ----\r\n\r\nimport validator from './validator'\r\n\r\n// M-UI styles\r\nconst useStyles = makeStyles(theme => ({\r\n  builderRoot: {\r\n    maxWidth: '400px',\r\n    marginTop: '80px'\r\n  },\r\n  paper: {\r\n    padding: 10,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    textAlign: 'center'\r\n  },\r\n  textField: {\r\n    margin: 5,\r\n    width: '80%'\r\n  },\r\n  fileInput: {\r\n    display: 'none'\r\n  },\r\n  imageContainer: {\r\n    marginTop: 5,\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  errors: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nfunction FormBuilder({\r\n  formName,\r\n  fields,\r\n  imageUpload = false,\r\n  mutation,\r\n  props,\r\n  defaultFields = 'none'\r\n}){\r\n\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n\r\n  //refs\r\n  const formRef = React.useRef()\r\n  const imageEle = React.useRef()\r\n  const imageFile = React.useRef()\r\n  const errorText = React.useRef()\r\n\r\n  // image handler\r\n  async function handleSubmit(props){\r\n    \r\n    let variables = {}\r\n    // reset error message\r\n    errorText.current.innerHTML = ''\r\n\r\n    try{\r\n      validator(formRef.current)\r\n      // map form to build object correctly\r\n      Object.keys(fields).map(field => {\r\n        switch(formRef.current[field].type){\r\n          case 'text':\r\n            return variables[field] = formRef.current[field].value\r\n          case 'number': \r\n            return variables[field] = parseFloat(formRef.current[field].value)\r\n          default:\r\n            return null\r\n        }\r\n      })\r\n\r\n      if(imageUpload && imageFile.current.files[0]){\r\n        // instantiate new form data\r\n        const data = new FormData()\r\n        // build header before sending to server\r\n        let config = {\r\n          headers: { 'Content-Type': 'multipart/form-data' }\r\n        }\r\n        // append the file to form data\r\n        data.append('file', imageFile.current.files[0])\r\n        // attempt to send file to backend, and AWS S3 bucket\r\n        let imageUrl = await axios.post(\r\n          'http://localhost:4000/uploadAdmin', \r\n          data, \r\n          config)\r\n        variables.imageUrl = imageUrl.data\r\n      }\r\n      const results = await props.client.mutate({\r\n        mutation: mutation,\r\n        variables: variables\r\n      })\r\n      \r\n      if(formName === 'Login Form'){\r\n        localStorage.setItem('token', results.data.login.token)\r\n        localStorage.setItem('email', results.data.login.user.email)\r\n        localStorage.setItem('role', results.data.login.user.role)\r\n        props.history.push('/')\r\n      }\r\n      if(formName === 'Register Form'){\r\n        window.setTimeout(() => props.history.push('/'), 4000)\r\n      }\r\n    }\r\n    catch (error) {\r\n      console.log(error)\r\n      let errMsg\r\n      // handle unsuccessful response\r\n      errMsg = error.toString().lastIndexOf(':') + 1\r\n      errorText.current.innerHTML = error.toString().substring(errMsg, 75)\r\n    }\r\n  }\r\n\r\n  // handles file display when uploaded\r\n  function handleChange(event){\r\n    // if file selected changes\r\n    if(event.target.files[0]){\r\n      let image = URL.createObjectURL(event.target.files[0])\r\n      imageEle.current.src = image\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Grid \r\n      container  \r\n      justify='center'\r\n      className={classes.builderRoot}>\r\n      <Paper className={classes.paper}>\r\n        <Typography>\r\n          {formName}\r\n        </Typography>\r\n        {imageUpload ? \r\n          <Grid  container className={classes.imageContainer}>\r\n            <label>\r\n              <img\r\n                className={classes.image}\r\n                alt='pic'\r\n                src={defaultFields.imageUrl || 'default_image.png' }\r\n                ref={imageEle}\r\n                width='100px'\r\n                height='100px'\r\n              />\r\n            <input \r\n              ref={imageFile}\r\n              className={classes.fileInput} \r\n              type='file'\r\n              accept=\"image/*\"\r\n              onChange={(event) => {\r\n                handleChange(event)\r\n              }}/>\r\n            </label>\r\n          </Grid> : null \r\n        }\r\n        <form\r\n          name={formName}\r\n          ref={formRef}\r\n          className={classes.formRoot}\r\n        >\r\n          {Object.keys(fields).map(field => {\r\n            switch(fields[field]){\r\n              case 'String':\r\n                return <TextField\r\n                  key={field}\r\n                  className={classes.textField}\r\n                  name={field}\r\n                  label={field}\r\n                  variant='outlined'\r\n                  defaultValue={defaultFields[field] || ''}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  type='text'\r\n                  /> \r\n              case 'Float':\r\n                return <TextField\r\n                  key={field}\r\n                  className={classes.textField}\r\n                  name={field}\r\n                  label={field}\r\n                  variant='outlined'\r\n                  defaultValue={defaultFields[field] || ''}\r\n                  inputProps={{ step: 'any' }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  type='number'\r\n                  step='any'\r\n                  />\r\n              default:\r\n                return null\r\n            }})\r\n          }\r\n          <FormHelperText\r\n            className={classes.errors}\r\n            ref={errorText}\r\n            error={true}\r\n          >\r\n          </FormHelperText>\r\n          <Button\r\n            onClick={() => {\r\n              handleSubmit(props)\r\n            }}\r\n            variant='contained'>\r\n            SUBMIT\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FormBuilder","import React from 'react'\r\nimport gql from 'graphql-tag'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport FormBuilder from '../tools/FormBuilder'\r\n\r\n//TODO: add register link\r\n\r\nfunction Login (props) {\r\n\r\n  return(\r\n    <Grid container justify='center'>\r\n      <FormBuilder\r\n        formName={'Login Form'}\r\n        fields={{\r\n          email: 'String',\r\n          password: 'String'\r\n        }}\r\n        mutation={LOGIN}\r\n        props={props}/>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Login\r\n\r\nconst LOGIN = gql`\r\n  mutation login($email: String!, $password: String!){\r\n    login(email: $email, password: $password){\r\n      token,\r\n      user{\r\n        email\r\n        role\r\n      }\r\n    }\r\n  }`","import React from 'react'\r\nimport gql from 'graphql-tag'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport FormBuilder from '../tools/FormBuilder'\r\n\r\nfunction Register (props) {\r\n  return(\r\n    <Grid container justify='center'>\r\n      <h1>TEST</h1>\r\n      <FormBuilder\r\n        formName={'Register Form'}\r\n        fields={{\r\n          email: 'String',\r\n          password: 'String',\r\n          confirmPassword: 'String'\r\n        }}\r\n        imageUpload={false}\r\n        mutation={REGISTER}\r\n        props={props}\r\n      />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Register\r\n\r\nconst REGISTER = gql`\r\n  mutation register($email: String!, $password: String!){\r\n    register(email: $email, password: $password){\r\n      email\r\n    }\r\n  }`","//TODO: profile page\r\nimport React from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\n// ---- material-ui imports ----\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Typography } from '@material-ui/core'\r\nimport Button from '@material-ui/core/Button'\r\n// -----------------------------\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '90vh',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    maxWidth: '1024px',\r\n    padding: '5%'\r\n  },\r\n  profile: {\r\n    textAlign: 'center'\r\n  },\r\n  imageContainer: {\r\n    margin: 'auto'\r\n  },\r\n  imageOuterContainer: {\r\n    float: 'left',\r\n    textAlign: 'center' \r\n  },\r\n  button: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}))\r\n\r\nfunction Profile (props) {\r\n  // material-ui instance\r\n  const classes = useStyles()\r\n  // graphql query hook\r\n  const { loading, error, data } = useQuery(GET_USER, { variables: { email: localStorage.getItem('email') }})\r\n  \r\n  if(loading) {\r\n    return(\r\n      <div className={classes.root}>\r\n        <h1>Loading....</h1>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if(error){\r\n    return(\r\n      <div className={classes.root}>\r\n        <h1>Something bad happend. Contact support.</h1>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  return(\r\n    <div className={classes.root}>\r\n      <div className={classes.imageOuterContainer}>\r\n        <div className={classes.imageContainer}>\r\n          <img src={data.getUser.imageUrl ||'profile_basic.png'} alt='profile' height='auto' width='100%'/>\r\n        </div>\r\n        <Typography\r\n          variant='h5'>\r\n          {`${data.getUser.firstName || 'User' } ${data.getUser.lastName || ''}`}\r\n        </Typography>\r\n        <Button\r\n          className={classes.button}\r\n          variant='contained'\r\n          href={'/edit_profile'}>\r\n          Edit Profile\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n\r\nconst GET_USER = gql`\r\n  query getUser($email: String!){\r\n    getUser(email: $email){\r\n      imageUrl\r\n      firstName \r\n      lastName\r\n      email\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport FormBuilder from '../../tools/FormBuilder'\r\n\r\nfunction EditProfile (props) {\r\n\r\n  const { loading, error, data } = useQuery(\r\n      GET_USER, \r\n      { variables: { email: localStorage.getItem('email') }})\r\n\r\n      if(loading){\r\n        return(\r\n          <div></div>\r\n        )\r\n      }\r\n\r\n      if(error){\r\n        return(\r\n          <div>\r\n\r\n          </div>\r\n        )\r\n      }\r\n      console.log(data)\r\n      return(\r\n        <Grid container justify='center'>\r\n          <FormBuilder\r\n            formName={'Update Profile Form'}\r\n            fields={{\r\n              firstName: 'String',\r\n              lastName: 'String',\r\n              email: 'String',\r\n            }}\r\n            imageUpload={true}\r\n            mutation={UPDATE_USER}\r\n            props={props}\r\n            defaultFields={data.getUser}\r\n            />\r\n        </Grid>\r\n      )\r\n}\r\n\r\nexport default EditProfile\r\n\r\nconst GET_USER = gql`\r\n  query getUser($email: String!){\r\n    getUser(email: $email){\r\n      imageUrl\r\n      firstName \r\n      lastName\r\n      email\r\n    }\r\n  }`\r\n\r\nconst UPDATE_USER = gql`\r\n  mutation updateUser($imageUrl: String, $firstName: String, $lastName: String){\r\n    updateUser(imageUrl: $imageUrl, firstName: $firstName, lastName: $lastName){\r\n      token \r\n      user{\r\n        imageUrl\r\n        firstName \r\n        lastName\r\n      }\r\n    }\r\n  }`","import React, { useEffect } from 'react'\r\nimport gql from 'graphql-tag'\r\nimport L from 'leaflet'\r\nimport 'leaflet-routing-machine'\r\n\r\n// ---- M-UI imports ----\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n// ---- M-UI imports ----\r\n\r\n// M-UI styles\r\nconst useStyles = makeStyles(theme => ({\r\n  map: {\r\n    position: 'absolute',\r\n    right: 0,\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    overflow: 'hidden'\r\n  }\r\n}))\r\n\r\nfunction Map ({ client, onStoreMarkerClicked }) {\r\n\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n  \r\n  //ref\r\n  const mapRef = React.createRef()\r\n  \r\n  useEffect(() => {\r\n    async function initMap(){\r\n      \r\n      mapRef.current = L.map('map', {\r\n        // map starting spot\r\n        center: [10, 10],\r\n        zoom: 12,\r\n        zoomControl: false,\r\n        layers: [\r\n          L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n            detectRetina: true,\r\n            maxZoom: 19,\r\n          })\r\n        ]\r\n      }, []) \r\n    }\r\n    initMap().then(async () => {\r\n      const stores = await client.query({query: GET_STORES})\r\n      stores.data.getStores.map(store => {\r\n        return L.marker([store.latitude, store.longitude])\r\n            .addTo(mapRef.current)\r\n            .bindTooltip(store.storeName, { className: 'myCSSClass', permanent: true})\r\n            .on('click', () => {\r\n              mapRef.current.flyTo([store.latitude, store.longitude])\r\n              onStoreMarkerClicked(store)\r\n            })\r\n      })\r\n    })\r\n    // annoying warning disabled, cant figure out any other workaround\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  return (\r\n    <div className={classes.map} id='map'/>\r\n  )\r\n}\r\n\r\nexport default Map\r\n\r\nconst GET_STORES = gql`\r\n  query getStores{\r\n    getStores{\r\n      id\r\n      storeName\r\n      latitude\r\n      longitude\r\n      addressOne\r\n      phoneNumber\r\n      email\r\n      imageUrl\r\n    }\r\n  }`","import React from 'react'\r\n\r\n// ---- M-UI imports\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Card from '@material-ui/core/Card'\r\n// ---- M-UI imports\r\n\r\n// M-UI styles\r\nconst useStyles = makeStyles(theme => ({\r\n  storeInfoRoot: {\r\n    padding: 10,\r\n    maxHeight: '60%',\r\n    justifyContent: 'center',\r\n  },\r\n  imageContainer: {\r\n    margin: 'auto',\r\n    width: '150px',\r\n    height: '150px'\r\n  },\r\n  title: {\r\n    textDecoration: 'underline',\r\n    width: '100%',\r\n    textAlign: 'center'\r\n  }\r\n}))\r\n\r\n//TODO: add contribute to icon images \r\nfunction StoreInfo ({ storeInfo }) {\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n  console.log(storeInfo)\r\n\r\n  if(storeInfo){\r\n    return (\r\n      <Grid container className={classes.storeInfoRoot}>\r\n        <Avatar \r\n          className={classes.imageContainer} \r\n          src={storeInfo.imageUrl || ''} \r\n          alt='store'/>\r\n        <Typography\r\n          className={classes.title}\r\n          variant='h4'>\r\n          {storeInfo.storeName}\r\n        </Typography>\r\n        <Card\r\n          raised={true}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    Address\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {storeInfo.addressOne}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    Phone Number\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {storeInfo.phoneNumber}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    Email\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {storeInfo.email}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Card>\r\n      </Grid>\r\n    )\r\n  }\r\n  else{\r\n    //TODO: ellaborate \r\n    return(\r\n      <div></div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StoreInfo","import React from 'react'\r\n\r\nimport StoreInfo from './StoreInfo'\r\n\r\n// ---- M-UI imports ----\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\n// ---- M-UI imports ----\r\n\r\n// M-UI styles \r\nconst useStyles = makeStyles(theme => ({\r\n  sideBar: {\r\n    position: 'absolute',\r\n    top: '90px',\r\n    left: '10px',\r\n    width: '400px',\r\n    height: '55%',\r\n    zIndex: 999,\r\n\r\n  }\r\n}))\r\n\r\nfunction SideBar (props) {\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container className={classes.sideBar}>\r\n      <Paper>\r\n        <StoreInfo storeInfo={props.storeInfo}/>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default SideBar","import React from 'react'\r\n\r\n// ---- M-UI imports\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Card from '@material-ui/core/Card'\r\n// ---- M-UI imports\r\n\r\n// M-UI styles\r\nconst useStyles = makeStyles(theme => ({\r\n  coffeeInfoRoot: {\r\n    padding: 10,\r\n    maxHeight: '60%',\r\n    justifyContent: 'center'\r\n  },\r\n  coffeeRoot: {\r\n    textAlign: 'center',\r\n    margin: 10\r\n  },\r\n  imageContainer: {\r\n    margin: 'auto',\r\n    width: '150px',\r\n    height: '150px'\r\n  },\r\n  title: {\r\n    textDecoration: 'underline'\r\n  }\r\n}))\r\n\r\n//TODO: add contribute to icon images \r\nfunction CoffeeInfo ({ coffeeInfo }) {\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n  console.log(coffeeInfo)\r\n\r\n  if(coffeeInfo){\r\n    return (\r\n      <Grid container className={classes.coffeeInfoRoot}>\r\n        <Typography\r\n          variant='h4'>\r\n          Store Coffees\r\n        </Typography>\r\n        {coffeeInfo.data.getCoffees.map(coffee => {\r\n          return(\r\n          <Grid className={classes.coffeeRoot}>\r\n          <Avatar \r\n          className={classes.imageContainer} \r\n          src={coffee.imageUrl || ''} \r\n          alt='store'/>\r\n          <Typography\r\n            className={classes.title}>\r\n            {coffee.coffeeName}\r\n          </Typography>\r\n        <Card\r\n          raised={true}>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell>\r\n                    description\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {coffee.description}\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Card>\r\n        </Grid>\r\n        )})}\r\n      </Grid>\r\n    )\r\n  }\r\n  else{\r\n    //TODO: ellaborate \r\n    return(\r\n      <div></div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CoffeeInfo","import React from 'react'\r\n\r\n// ---- M-UI imports ----\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\n// ---- M-UI imports ----\r\n\r\nimport CoffeeInfo from './CoffeeInfo'\r\n\r\n// M-UI styles \r\nconst useStyles = makeStyles(theme => ({\r\n  coffeeBar: {\r\n    position: 'absolute',\r\n    top: '90px',\r\n    right: '10px',\r\n    width: '400px',\r\n    maxHeight: '60%',\r\n    overflowY: 'scroll',\r\n    zIndex: 999,\r\n\r\n  }\r\n}))\r\n\r\nfunction CoffeeBar (props) {\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n  return(\r\n    <Grid container className={classes.coffeeBar}>\r\n      <Paper>\r\n        <CoffeeInfo coffeeInfo={props.coffeeInfo}/>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CoffeeBar","import React from 'react'\r\n\r\n// ---- M-UI imports ----\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\n// ---- M-UI imports ----\r\n\r\n// M-UI styles\r\nconst useStyles = makeStyles(theme => ({\r\n  buttonRoot: {\r\n    zIndex: 999,\r\n    position: 'absolute',\r\n    right: 5,\r\n    bottom: 20\r\n  },\r\n  button: {\r\n\r\n  }\r\n}))\r\n\r\nfunction ReportButton () {\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n\r\n  return(\r\n    <div className={classes.buttonRoot}>\r\n      <Button \r\n        className={classes.button} \r\n        variant='contained'\r\n        href='mailto:coffeemapsapp@gmail.com'>\r\n          Report A Problem\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReportButton","import React from 'react'\r\nimport gql from 'graphql-tag'\r\n\r\nimport Map from './Map'\r\nimport SideBar from './SideBar/SideBar'\r\nimport CoffeeBar from './CoffeeBar'\r\nimport ReportButton from './ReportButton'\r\n//TODO: import user button\r\n\r\n// ---- M-UI imports ----\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n// ---- M-UI imports ----\r\n\r\n// M-UI styles\r\nconst useStyles = makeStyles(theme => ({\r\n  mapViewRoot: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%'\r\n  }\r\n}))\r\n\r\nfunction MapView (props) {\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n\r\n  const [ storeInfo, setStoreInfo ] = React.useState(null)\r\n  const [ coffeeInfo, setCoffeeInfo ] = React.useState(null)\r\n  const [ visibility, setVisibility ] = React.useState(false)\r\n\r\n  //store info function on marker click\r\n  async function onStoreMarkerClicked(store){\r\n    setStoreInfo(store)\r\n    const coffees = await props.client.query({\r\n      query: GET_COFFEES,\r\n      variables: {\r\n        storeId: store.id\r\n      }\r\n    })\r\n    setCoffeeInfo(coffees)\r\n    setVisibility(!visibility)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.mapViewRoot}>\r\n      <Map \r\n        onStoreMarkerClicked={onStoreMarkerClicked} \r\n        client={props.client}/>\r\n      { visibility ? <SideBar storeInfo={storeInfo}/> : null }\r\n      { visibility ? <CoffeeBar coffeeInfo={coffeeInfo}/> : null }\r\n      <ReportButton/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MapView\r\n\r\nconst GET_COFFEES = gql`\r\n  query getCoffees($storeId: String!){\r\n    getCoffees(storeId: $storeId){\r\n      id\r\n      storeId\r\n      coffeeName\r\n      imageUrl\r\n      description\r\n    }\r\n  }`","import React from 'react'\r\n\r\nimport Link from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  adminRoot: {\r\n    padding: 100\r\n  },\r\n  paper: {\r\n    width: '100%'\r\n  }\r\n}))\r\n\r\nfunction Admin (){\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n  return(\r\n    <Grid container className={classes.adminRoot}>\r\n      <Paper className={classes.paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                Admin Panel\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Link href='/stores'>Stores</Link>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Admin","import React from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\n// ---- M-UI imports ----\r\nimport Link from '@material-ui/core/Link'\r\nimport Table from '@material-ui/core/Table'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\n// ---- M-UI imports ----\r\n\r\nimport FormBuilder from '../../tools/FormBuilder'\r\n\r\n// M-UI styles\r\nconst useStyles = makeStyles(theme => ({\r\n  storesRoot: {\r\n    padding: 100\r\n  },\r\n  paper: {\r\n    width: '100%'\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n  }\r\n}))\r\n\r\nfunction Stores (props) {\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n\r\n  const [ visibility, setVisibility ] = React.useState(false)\r\n  // handle button\r\n  function handleClick(event){\r\n    event.preventDefault()\r\n    setVisibility(!visibility)\r\n  }\r\n\r\n  // graphql query\r\n  const { loading, error, data } = useQuery(GET_STORES)\r\n\r\n  if(loading) {\r\n    return(\r\n      <div>\r\n        <h1>Loading....</h1>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if(error){\r\n    return(\r\n      <div>\r\n        <h1>Something bad happend. Contact support.</h1>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <Grid container className={classes.storesRoot}>\r\n      <Paper className={classes.paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                Coffee Shops\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n              {data.getStores.map(store => {\r\n                return (\r\n                  <TableRow\r\n                    key={store.id}>\r\n                    <TableCell\r\n                     key={store.id}>\r\n                      <Link \r\n                        key={store.id}\r\n                        href={`/store/${store.id}`}>\r\n                       {store.storeName}\r\n                      </Link>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n      { visibility ? \r\n        <FormBuilder \r\n          formName={'Create Store Form'}\r\n          fields={{\r\n            storeName: 'String',\r\n            latitude: 'Float',\r\n            longitude: 'Float',\r\n            addressOne: 'String',\r\n            phoneNumber: 'String',\r\n            email: 'String'\r\n          }}\r\n          imageUpload={true}\r\n          mutation={CREATE_STORE}\r\n          props={props}\r\n        /> : null }\r\n      { visibility ? null :\r\n      <Button\r\n        variant='contained'\r\n        className={classes.button}\r\n        onClick={(event) => {\r\n          handleClick(event)\r\n        }}>\r\n        Create Store\r\n      </Button>}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Stores\r\n\r\nconst GET_STORES = gql`\r\n  query getStores{\r\n    getStores{\r\n      storeName\r\n      id\r\n    }\r\n  }`\r\n\r\nconst CREATE_STORE = gql`\r\n  mutation createStore($storeName: String!, $latitude: Float!, $longitude: Float!,\r\n    $addressOne: String!, $phoneNumber: String!, $email: String!, $imageUrl: String!){\r\n      createStore(storeName: $storeName, latitude: $latitude, longitude: $longitude,\r\n        addressOne: $addressOne, phoneNumber: $phoneNumber, email: $email, imageUrl: $imageUrl){\r\n          storeName\r\n        }\r\n    }`","import React from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\n// ---- M-UI imports ----\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Link from '@material-ui/core/Link'\r\nimport Button from '@material-ui/core/Button'\r\n// ---- M-UI imports ----\r\n\r\nimport FormBuilder from '../../tools/FormBuilder'\r\n\r\n// M-UI styles\r\nconst useStyles = makeStyles(theme => ({\r\n  coffeesRoot: {\r\n    position: 'absolute',\r\n    top: '10px',\r\n    right: '120px',\r\n    maxWidth: '300px'\r\n  },\r\n  error: {\r\n    \r\n  },\r\n  loading: {\r\n\r\n  },\r\n}))\r\n\r\nfunction Coffees ({ props, storeId }) {\r\n\r\n  const [ visibility, setVisibility ] = React.useState(false)\r\n  // handle button\r\n  function handleClick(event){\r\n    event.preventDefault()\r\n    setVisibility(!visibility)\r\n  }\r\n\r\n\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n  console.log(storeId)\r\n  const { loading, error, data } = useQuery(GET_COFFEES, { variables: { storeId: storeId }})\r\n  if(loading){\r\n    return(\r\n      <Grid container justify='center'>\r\n        <Typography\r\n          className={classes.loading}>\r\n            Loading, please wait.\r\n        </Typography>\r\n      </Grid>\r\n    )\r\n  }\r\n  if(error){\r\n    return(\r\n      <Grid container justify='center'>\r\n        <Typography\r\n          className={classes.error}>\r\n            Something bad happened. Contact support.\r\n        </Typography>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <Grid className={classes.coffeesRoot}>\r\n      <Paper className={classes.paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                This Stores Coffee List \r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n              {data.getCoffees.map(coffee => {\r\n                return (\r\n                  <TableRow\r\n                    key={coffee.id}>\r\n                    <TableCell\r\n                     key={coffee.id}>\r\n                      <Link \r\n                        key={coffee.id}\r\n                        href={`/coffee/${coffee.id}`}>\r\n                       {coffee.coffeeName}\r\n                      </Link>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n          { visibility ? \r\n          <FormBuilder \r\n            formName={'Create Coffee Form'}\r\n            fields={{\r\n              storeName: 'String',\r\n              coffeeName: 'String',\r\n              description: 'String'\r\n            }}\r\n            imageUpload={true}\r\n            mutation={CREATE_COFFEE}\r\n            props={props}\r\n          /> : null }\r\n        { visibility ? null :\r\n        <Button\r\n          variant='contained'\r\n          className={classes.button}\r\n          onClick={(event) => {\r\n            handleClick(event)\r\n          }}>\r\n          Create Coffee\r\n        </Button>}\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Coffees\r\n\r\nconst GET_COFFEES = gql`\r\n  query getCoffees($storeId: String!){\r\n    getCoffees(storeId: $storeId){\r\n      id\r\n      storeId\r\n      coffeeName\r\n      imageUrl\r\n      description\r\n    }\r\n  }`\r\n\r\n  const CREATE_COFFEE = gql`\r\n  mutation createCoffee(\r\n    $storeName: String!,\r\n    $coffeeName: String!,\r\n    $imageUrl: String!,\r\n    $description: String!\r\n  ){\r\n    createCoffee(\r\n      storeName: $storeName,\r\n      coffeeName: $coffeeName,\r\n      imageUrl: $imageUrl,\r\n      description: $description\r\n    ){\r\n      coffeeName\r\n      description\r\n    }\r\n  }`","import React from 'react'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\n\r\n// --- M-UI imports ----\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\n// --- M-UI imports ----\r\n\r\nimport FormBuilder from '../../tools/FormBuilder'\r\nimport Coffees from './Coffees'\r\n\r\n// M-UI styles\r\nconst useStyles = makeStyles(theme => ({\r\n  storeRoot: {\r\n    \r\n  }\r\n}))\r\n\r\nfunction Store(props) {\r\n  \r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n\r\n  // dirty way of getting the store id by itself\r\n  const breakPoint = '/'\r\n  const index = props.history.location.pathname.lastIndexOf(breakPoint)\r\n  const storeId = props.history.location.pathname.slice(index + 1)\r\n\r\n  const { loading, error, data } = useQuery(GET_STORE, { variables: { id: storeId }})\r\n\r\n  async function handleClick(event){\r\n    event.preventDefault()\r\n    await props.client.mutate({\r\n      mutation: DELETE_STORE,\r\n      variables: {\r\n        id: storeId\r\n      }\r\n    })\r\n    props.history.push('/stores')\r\n  }\r\n\r\n  if(loading){\r\n    return(\r\n      <Grid container justify='center'>\r\n        <Typography\r\n          className={classes.storeRoot}>\r\n            Loading, please wait.\r\n        </Typography>\r\n      </Grid>\r\n    )\r\n  }\r\n  if(error){\r\n    return(\r\n      <Grid container justify='center'>\r\n        <Typography\r\n          className={classes.storeRoot}>\r\n            Something bad happened. Contact support.\r\n        </Typography>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <Grid container justify='center' className={classes.storeRoot}>\r\n      <FormBuilder\r\n            formName={'Update Store Form'}\r\n            fields={{\r\n              storeName: 'String',\r\n              latitude: 'Float',\r\n              longitude: 'Float',\r\n              addressOne: 'String',\r\n              phoneNumber: 'String',\r\n              email: 'String'\r\n            }}\r\n            imageUpload={true}\r\n            mutation={UPDATE_STORE}\r\n            props={props}\r\n            defaultFields={data.getStore}\r\n            />\r\n            <Button\r\n        variant='contained'\r\n        onClick={(event) => {\r\n          handleClick(event)\r\n        }}\r\n      >\r\n        DELETE\r\n      </Button>\r\n      <Coffees props={props} storeId={storeId} />\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Store\r\n\r\nconst GET_STORE = gql`\r\n  query getStore($id: String){\r\n    getStore(id: $id){\r\n      storeName\r\n      latitude\r\n      longitude\r\n      addressOne\r\n      phoneNumber\r\n      email\r\n      imageUrl\r\n    }\r\n  }`\r\n\r\nconst UPDATE_STORE = gql`\r\n  mutation updateStore(\r\n    $storeName: String!,\r\n    $latitude: Float,\r\n    $longitude: Float,\r\n    $addressOne: String,\r\n    $phoneNumber: String,\r\n    $email: String,\r\n    $imageUrl: String\r\n  ){\r\n    updateStore(\r\n      storeName: $storeName,\r\n      latitude: $latitude,\r\n      longitude: $longitude,\r\n      addressOne: $addressOne,\r\n      phoneNumber: $phoneNumber,\r\n      email: $email,\r\n      imageUrl: $imageUrl\r\n    ){\r\n      storeName\r\n      latitude\r\n      longitude\r\n      addressOne\r\n      phoneNumber\r\n      email\r\n      imageUrl\r\n    }\r\n  }`\r\n\r\nconst DELETE_STORE = gql`\r\n  mutation deleteStore(\r\n    $id: String!\r\n  ){\r\n    deleteStore(\r\n      id: $id\r\n    ){\r\n      storeName\r\n    }\r\n  }`","import React from 'react'\r\n\r\nimport SvgIcon from '@material-ui/core/SvgIcon'\r\n\r\nfunction CoffeeMapsLogo (props) {\r\n  return(\r\n    <SvgIcon {...props}>\r\n      <path d=\"M2.756,20.725h2.95c0.041,0.257,0.254,0.458,0.523,0.458h6.707c0.27,0,0.482-0.2,0.523-0.458h2.95\r\n\t\t\tc0.499,0,0.903-0.404,0.903-0.903H1.854C1.854,20.321,2.258,20.725,2.756,20.725z\"/>\r\n\t\t<path d=\"M20.865,11.444c-0.752-0.609-1.811-0.619-2.508-0.542c0.02-0.486,0.031-0.983,0.031-1.5H0c0,4.97,0.752,8.556,5.511,9.894\r\n\t\t\th7.366c1.885-0.529,3.135-1.418,3.964-2.6c1.806-0.035,4.711-0.746,4.82-3.24C21.708,12.364,21.254,11.758,20.865,11.444z\r\n\t\t\t M17.598,15.27c0.346-0.889,0.551-1.889,0.664-2.988c0.488-0.08,1.329-0.131,1.754,0.215c0.078,0.064,0.321,0.262,0.293,0.901\r\n\t\t\tC20.252,14.69,18.648,15.124,17.598,15.27z\"/>\r\n\t\t<path d=\"M7.491,8.704c0,0,3.5-0.257,1.896-3.208c-1.288-2.369-0.994-3.759,0.654-5.015c0,0-5.398,1.375-2.25,5.63\r\n\t\t\tC8.946,7.965,7.491,8.704,7.491,8.704z\"/>\r\n\t\t<path d=\"M9.85,8.468c0,0,2.804-0.591,1.278-2.846c-0.554-0.978,0.21-1.327,0.21-1.327s-1.805,0.057-1.043,1.608\r\n\t\t\tC10.905,7.15,10.724,7.858,9.85,8.468z\"/>\r\n    </SvgIcon>\r\n  )\r\n}\r\n\r\nexport default CoffeeMapsLogo","import React from 'react'\r\n\r\n// ---- M-UI imports\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\n// ---- M-UI imports\r\n\r\nimport CoffeeMapsLogo from './CoffeeMapsLogo'\r\n\r\n// M-UI styles\r\nconst useStyles = makeStyles(theme => ({\r\n  headerRoot: {\r\n    position: 'absolute',\r\n    bottom: 'auto',\r\n    left: '10px',\r\n    top: '10px',\r\n    width: '400px',\r\n    zIndex: 1000\r\n  },\r\n  paper: {\r\n    padding: '10px'\r\n  },\r\n  title: {\r\n    textDecoration: 'none',\r\n  },\r\n  logo: {\r\n    width: '40px',\r\n    height: '40px'\r\n  }\r\n}))\r\n\r\nfunction Title () {\r\n\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n  return (\r\n    <Grid className={classes.headerRoot} >\r\n      <Paper className={classes.paper}>\r\n        <Typography \r\n          variant='h4'\r\n          className={classes.title}\r\n        >\r\n          <CoffeeMapsLogo \r\n            className={classes.logo}\r\n            viewBox={'0 0 21.664 21.665'}/>\r\n          {` Coffee Maps`}\r\n        </Typography>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Title","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// ---- M-UI imports ----\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\n// ---- M-UI imports ----\r\n\r\n// M-UI styles\r\nconst useStyles = makeStyles(theme => ({\r\n  panelRoot: {\r\n    position: 'absolute',\r\n    bottom: 'auto',\r\n    top: '10px',\r\n    right: '10px',\r\n    zIndex: 1000\r\n  }\r\n}))\r\n\r\nfunction UserPanel () {\r\n\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null)\r\n\r\n\r\n  // open menu \r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget)\r\n  }\r\n\r\n  // close menu\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <Grid className={classes.panelRoot}>\r\n      <Paper>\r\n      <IconButton\r\n        onClick={handleClick}>\r\n        <AccountCircleIcon fontSize='large'/>\r\n      </IconButton>\r\n        {localStorage.getItem('token') ? \r\n          (<Menu\r\n            id='simple-menu'\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem \r\n              onClick={() => {\r\n              localStorage.removeItem('token')\r\n              localStorage.removeItem('email')\r\n              localStorage.removeItem('role')\r\n              handleClose()\r\n              }}\r\n              component={Link}\r\n              to='/login'>\r\n              Logout\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                handleClose()\r\n              }}\r\n              component={Link}\r\n              to='/profile'>\r\n              Profile\r\n            </MenuItem>\r\n          </Menu>) \r\n          : \r\n          (<Menu\r\n            className={classes.menu}\r\n            id='simple-menu'\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem \r\n              onClick={() => handleClose()} \r\n              component={Link} to='/login'>\r\n             Login\r\n            </MenuItem>\r\n          </Menu>)\r\n        }\r\n        </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default UserPanel","import React from 'react'\r\nimport gql from 'graphql-tag'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\n// --- M-UI imports ----\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\n// --- M-UI imports ----\r\n\r\nimport FormBuilder from '../../tools/FormBuilder'\r\n\r\n// M-UI styles\r\nconst useStyles = makeStyles(theme => ({\r\n  error: {\r\n    \r\n  },\r\n  loading: {\r\n\r\n  }\r\n}))\r\n\r\nfunction Coffee(props) {\r\n  // M-UI styles instance\r\n  const classes = useStyles()\r\n\r\n  // dirty way of getting the store id by itself\r\n  const breakPoint = '/'\r\n  const index = props.history.location.pathname.lastIndexOf(breakPoint)\r\n  const coffeeId = props.history.location.pathname.slice(index + 1)\r\n\r\n  const { loading, error, data } = useQuery(GET_COFFEE, { variables: { id: coffeeId }})\r\n  \r\n  async function handleClick(event) {\r\n    event.preventDefault()\r\n    await props.client.mutate({\r\n      mutation: DELETE_COFFEE,\r\n      variables: {\r\n        id: coffeeId\r\n      }\r\n    })\r\n    props.history.push('/stores')\r\n  }\r\n\r\n  if(loading){\r\n    return(\r\n      <Grid container justify='center'>\r\n        <Typography\r\n          className={classes.loading}>\r\n            Loading, please wait.\r\n        </Typography>\r\n      </Grid>\r\n    )\r\n  }\r\n  if(error){\r\n    return(\r\n      <Grid container justify='center'>\r\n        <Typography\r\n          className={classes.error}>\r\n            Something bad happened. Contact support.\r\n        </Typography>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <Grid container justify='center'>\r\n      <FormBuilder\r\n            formName={'Update Coffee Form'}\r\n            fields={{\r\n              coffeeName: 'String',\r\n              description: 'String',\r\n            }}\r\n            imageUpload={true}\r\n            mutation={UPDATE_COFFEE}\r\n            props={props}\r\n            defaultFields={data.getCoffee}\r\n            />\r\n      <Button\r\n        variant='contained'\r\n        onClick={(event) => {\r\n          handleClick(event)\r\n        }}\r\n      >\r\n        DELETE\r\n      </Button>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Coffee\r\n\r\nconst GET_COFFEE = gql`\r\n  query getCoffee($id: String!){\r\n    getCoffee(id: $id){\r\n      id\r\n      storeId\r\n      coffeeName\r\n      imageUrl\r\n      description\r\n    }\r\n  }`\r\n\r\nconst UPDATE_COFFEE = gql`\r\n  mutation updateCoffee(\r\n    $coffeeName: String!,\r\n    $imageUrl: String,\r\n    $description: String\r\n  ){\r\n    updateCoffee(\r\n      coffeeName: $coffeeName,\r\n      imageUrl: $imageUrl,\r\n      description: $description\r\n    ){\r\n      coffeeName\r\n      imageUrl\r\n      description\r\n    }\r\n  }`\r\n\r\n  const DELETE_COFFEE = gql`\r\n    mutation deleteCoffee(\r\n      $id: String!,\r\n    ){\r\n      deleteCoffee(\r\n        id: $id\r\n      ){\r\n        coffeeName\r\n        imageUrl\r\n        description\r\n      }\r\n    }`","import { Route, Switch, BrowserRouter, Redirect} from 'react-router-dom'\r\nimport React from 'react'\r\nimport { ApolloProvider } from 'react-apollo'\r\n\r\nimport client from '../apolloClient.js'\r\nimport Login from './Login'\r\nimport Register from './Register'\r\nimport Profile from './Profile'\r\nimport EditProfile from './Profile/EditProfile'\r\nimport MapView from './MapView'\r\nimport Admin from './Admin/Admin'\r\nimport Stores from './Admin/Stores'\r\nimport Store from './Admin/Store'\r\nimport Title from './Title'\r\nimport UserPanel from './UserPanel'\r\nimport Coffee from './Admin/Coffee'\r\n\r\nfunction App() {\r\n\r\n  return(\r\n    <ApolloProvider client={client}>\r\n      <BrowserRouter>\r\n          <Title/>\r\n          <UserPanel/>  \r\n        <Switch>\r\n          <Route \r\n            exact path='/'\r\n            render={props => <MapView {...props} client={client}/>}\r\n          />\r\n          <Route \r\n            exact path='/register'\r\n            render={props=> localStorage.getItem('token') ? \r\n             (<Redirect to={{ pathname: '/'}}/>) : (<Register {...props} client={client}/>)}\r\n          />\r\n          <Route \r\n            exact path='/login' \r\n            render={props => localStorage.getItem('token') ? \r\n             (<Redirect to={{ pathname: '/'}}/>) : (<Login {...props} client={client}/>)}\r\n          />\r\n          <Route \r\n            exact path='/profile'\r\n            render={props => localStorage.getItem('token') ?\r\n             <Profile {...props} client={client}/> :\r\n             <Redirect to={{ pathname: '/login'}}/> }\r\n          />\r\n          <Route\r\n            exact path='/edit_profile'\r\n            render={props => localStorage.getItem('token') ?\r\n             <EditProfile {...props} client={client}/> :\r\n             <Redirect to={{ pathname: '/login'}}/>}\r\n          />\r\n          <ProtectedAdminRoute>\r\n            <Route\r\n              exact path='/admin'\r\n              render={props => <Admin {...props} client={client}/>}\r\n            />\r\n            <Route\r\n              exact path='/stores'\r\n              render={props => <Stores {...props} client={client}/>}\r\n            />\r\n            <Route \r\n              path='/store'\r\n              render={props => <Store {...props} client={client}/>}\r\n            />\r\n            <Route\r\n              path='/coffee'\r\n              render={props => <Coffee {...props} client={client}/>}\r\n            />\r\n          </ProtectedAdminRoute>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </ApolloProvider>\r\n  )\r\n}\r\n\r\nfunction ProtectedAdminRoute({\r\n  children,\r\n  ...props\r\n}){\r\n  return(\r\n    <Route render={props => {\r\n      return(\r\n        localStorage.getItem('role') === 'ADMIN' ? (children) : (<Redirect to={{ pathname: '/'}}/>)\r\n      )\r\n    }}/>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport axios from 'axios'\r\n\r\nlet authHeader = 'Bearer'\r\naxios.defaults.headers.common['Authorization'] = authHeader.concat(' ', localStorage.getItem('token'))\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}